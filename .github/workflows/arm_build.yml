on: [push, pull_request]

jobs:
  aarch64_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on bullseye aarch64
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: bullseye

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            set -ex
            uname -a
            echo ::set-output name=uname::$(uname -a)
            apt-get update
            apt-get install -y libgtk-3-dev
            apt-get install -y libwebkit2gtk-4.0
            apt-get install -y libwebkit2gtk-4.0-dev
            apt-get install -y libcurl4-openssl-dev
            apt-get install -y alsa
            apt-get install -y alsa-tools
            apt-get install -y libasound2-dev
            apt-get install -y jack
            apt-get install -y libjack-dev
            apt-get install -y libfreetype6-dev
            apt-get install -y libxinerama-dev
            apt-get install -y libxcb-xinerama0
            apt-get install -y libxinerama1
            apt-get install -y x11proto-xinerama-dev
            apt-get install -y libxrandr-dev
            apt-get install -y libgl1-mesa-dev
            apt-get install -y libxcursor-dev 
            apt-get install -y libxcursor1 
            apt-get install -y libxcb-cursor-dev 
            apt-get install -y libxcb-cursor0
            apt-get install -y --fix-missing
            apt list --installed
            find /usr/include -name "asoundlib.h" -print
            git submodule update --depth 1 --init --recursive
            export SVER=`cat VERSION`
            export GH=`git log -1 --format=%h`
            echo "Version ${SVER} hash ${GH}"
            # make it available below
            echo "##vso[task.setvariable variable=STOCHAS_VERSION]${SVER}"
            echo "##vso[task.setvariable variable=GH;isOutput=true]${GH}"
            cmake -Bbuild -DSTOCHAS_VERSION=${STOCHAS_VERSION}
            cmake --build build --config Release
            LINARCH=`uname -m`
            NM=stochas-${STOCHAS_VERSION}.${GH}-linux-${LINARCH}.tgz
            mkdir -p build/product/
            mkdir -p build/Stochas/Standalone
            cp -r build/stochas_artefacts/VST3/* build/Stochas
            cp -r build/stochas_artefacts/Standalone/* build/Stochas/Standalone      
            tar czf "build/product/${NM}" -C build Stochas

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
